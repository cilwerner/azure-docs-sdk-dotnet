<Type Name="PurviewExtensions" FullName="Azure.ResourceManager.Purview.PurviewExtensions">
  <TypeSignature Language="C#" Value="public static class PurviewExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PurviewExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Purview.PurviewExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PurviewExtensions" />
  <TypeSignature Language="F#" Value="type PurviewExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Purview. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckPurviewAccountNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt; CheckPurviewAccountNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt; CheckPurviewAccountNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.CheckPurviewAccountNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckPurviewAccountNameAvailability (subscriptionResource As SubscriptionResource, content As PurviewAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PurviewAccountNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckPurviewAccountNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.CheckPurviewAccountNameAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if account name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailability(Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPurviewAccountNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt; CheckPurviewAccountNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt; CheckPurviewAccountNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.CheckPurviewAccountNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckPurviewAccountNameAvailabilityAsync (subscriptionResource As SubscriptionResource, content As PurviewAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PurviewAccountNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckPurviewAccountNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.CheckPurviewAccountNameAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if account name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailability(Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAccount">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; GetDefaultAccount (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; GetDefaultAccount(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetDefaultAccount(Azure.ResourceManager.Resources.TenantResource,System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultAccount (tenantResource As TenantResource, scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DefaultPurviewAccountPayload)" />
      <MemberSignature Language="F#" Value="static member GetDefaultAccount : Azure.ResourceManager.Resources.TenantResource * Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetDefaultAccount (tenantResource, scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/getDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.GetDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; GetDefaultAccountAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; GetDefaultAccountAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetDefaultAccountAsync(Azure.ResourceManager.Resources.TenantResource,System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultAccountAsync (tenantResource As TenantResource, scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DefaultPurviewAccountPayload))" />
      <MemberSignature Language="F#" Value="static member GetDefaultAccountAsync : Azure.ResourceManager.Resources.TenantResource * Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetDefaultAccountAsync (tenantResource, scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/getDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.GetDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccount">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccount (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccount(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccount(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccount (resourceGroupResource As ResourceGroupResource, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PurviewAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccount : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccount (resourceGroupResource, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="accountName"> The name of the account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Purview/accounts/{accountName}</description></item><item><term>Operation Id</term><description>Accounts_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewResourceGroupResource.GetPurviewAccount(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="accountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;&gt; GetPurviewAccountAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt;&gt; GetPurviewAccountAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccountAsync (resourceGroupResource As ResourceGroupResource, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PurviewAccountResource))" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccountAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountAsync (resourceGroupResource, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="accountName"> The name of the account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Purview/accounts/{accountName}</description></item><item><term>Operation Id</term><description>Accounts_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewResourceGroupResource.GetPurviewAccountAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="accountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccountResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Purview.PurviewAccountResource GetPurviewAccountResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Purview.PurviewAccountResource GetPurviewAccountResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccountResource (client As ArmClient, id As ResourceIdentifier) As PurviewAccountResource" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccountResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Purview.PurviewAccountResource" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Purview.PurviewAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Purview.PurviewAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewArmClient.GetPurviewAccountResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccounts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Purview.PurviewAccountCollection GetPurviewAccounts (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Purview.PurviewAccountCollection GetPurviewAccounts(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccounts(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccounts (resourceGroupResource As ResourceGroupResource) As PurviewAccountCollection" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccounts : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Purview.PurviewAccountCollection" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccounts resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Purview.PurviewAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of PurviewAccountResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewResourceGroupResource.GetPurviewAccounts" /> instead.</description></item></summary>
        <returns> An object representing collection of PurviewAccountResources and their operations over a PurviewAccountResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccounts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccounts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccounts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccounts(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccounts (subscriptionResource As SubscriptionResource, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PurviewAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccounts : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccounts (subscriptionResource, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="skipToken"> The skip token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List accounts in Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/accounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetPurviewAccounts(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccountsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccountsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccountsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewAccountsAsync (subscriptionResource As SubscriptionResource, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PurviewAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetPurviewAccountsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewAccountsAsync (subscriptionResource, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="skipToken"> The skip token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List accounts in Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/accounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetPurviewAccounts(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewKafkaConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource GetPurviewKafkaConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource GetPurviewKafkaConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewKafkaConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewKafkaConfigurationResource (client As ArmClient, id As ResourceIdentifier) As PurviewKafkaConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetPurviewKafkaConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewKafkaConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewArmClient.GetPurviewKafkaConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Purview.PurviewKafkaConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource GetPurviewPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource GetPurviewPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As PurviewPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetPurviewPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewArmClient.GetPurviewPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Purview.PurviewPrivateLinkResource GetPurviewPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Purview.PurviewPrivateLinkResource GetPurviewPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPurviewPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As PurviewPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetPurviewPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Purview.PurviewPrivateLinkResource" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetPurviewPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Purview.PurviewPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Purview.PurviewPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewArmClient.GetPurviewPrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Purview.PurviewPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsages (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsages(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetUsages(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUsages (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PurviewUsage)" />
      <MemberSignature Language="F#" Value="static member GetUsages : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetUsages (subscriptionResource, location, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="filter" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The region. </param>
        <param name="filter"> The filter, currently unused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage quota configuration
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Purview.Models.PurviewUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsagesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsagesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.GetUsagesAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUsagesAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PurviewUsage)" />
      <MemberSignature Language="F#" Value="static member GetUsagesAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.GetUsagesAsync (subscriptionResource, location, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="filter" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The region. </param>
        <param name="filter"> The filter, currently unused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage quota configuration
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Purview.Models.PurviewUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAccount">
      <MemberSignature Language="C#" Value="public static Azure.Response RemoveDefaultAccount (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response RemoveDefaultAccount(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.RemoveDefaultAccount(Azure.ResourceManager.Resources.TenantResource,System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDefaultAccount (tenantResource As TenantResource, scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member RemoveDefaultAccount : Azure.ResourceManager.Resources.TenantResource * Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Azure.ResourceManager.Purview.PurviewExtensions.RemoveDefaultAccount (tenantResource, scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the default account from the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/removeDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Remove</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.RemoveDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveDefaultAccountAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveDefaultAccountAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.RemoveDefaultAccountAsync(Azure.ResourceManager.Resources.TenantResource,System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDefaultAccountAsync (tenantResource As TenantResource, scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member RemoveDefaultAccountAsync : Azure.ResourceManager.Resources.TenantResource * Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.RemoveDefaultAccountAsync (tenantResource, scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the default account from the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/removeDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Remove</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.RemoveDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultAccount">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; SetDefaultAccount (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; SetDefaultAccount(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.SetDefaultAccount(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDefaultAccount (tenantResource As TenantResource, defaultAccountPayload As DefaultPurviewAccountPayload, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DefaultPurviewAccountPayload)" />
      <MemberSignature Language="F#" Value="static member SetDefaultAccount : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.SetDefaultAccount (tenantResource, defaultAccountPayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="defaultAccountPayload" Type="Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="defaultAccountPayload"> The payload containing the default account information and the scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sets the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/setDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Set</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.SetDefaultAccount(Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="defaultAccountPayload" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; SetDefaultAccountAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; SetDefaultAccountAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.SetDefaultAccountAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDefaultAccountAsync (tenantResource As TenantResource, defaultAccountPayload As DefaultPurviewAccountPayload, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DefaultPurviewAccountPayload))" />
      <MemberSignature Language="F#" Value="static member SetDefaultAccountAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.SetDefaultAccountAsync (tenantResource, defaultAccountPayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="defaultAccountPayload" Type="Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="defaultAccountPayload"> The payload containing the default account information and the scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sets the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/setDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Set</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.SetDefaultAccount(Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="defaultAccountPayload" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionGetFeature">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt; SubscriptionGetFeature (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locations, Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt; SubscriptionGetFeature(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locations, class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.SubscriptionGetFeature(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubscriptionGetFeature (subscriptionResource As SubscriptionResource, locations As String, content As PurviewBatchFeatureContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PurviewBatchFeatureStatus)" />
      <MemberSignature Language="F#" Value="static member SubscriptionGetFeature : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.SubscriptionGetFeature (subscriptionResource, locations, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="locations" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locations"> Location of feature. </param>
        <param name="content"> Request body with feature names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details from a list of feature names.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{locations}/listFeatures</description></item><item><term>Operation Id</term><description>Features_SubscriptionGet</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.SubscriptionGetFeature(System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locations" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locations" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionGetFeatureAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt; SubscriptionGetFeatureAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locations, Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt; SubscriptionGetFeatureAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locations, class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.PurviewExtensions.SubscriptionGetFeatureAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubscriptionGetFeatureAsync (subscriptionResource As SubscriptionResource, locations As String, content As PurviewBatchFeatureContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PurviewBatchFeatureStatus))" />
      <MemberSignature Language="F#" Value="static member SubscriptionGetFeatureAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt;" Usage="Azure.ResourceManager.Purview.PurviewExtensions.SubscriptionGetFeatureAsync (subscriptionResource, locations, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="locations" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locations"> Location of feature. </param>
        <param name="content"> Request body with feature names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details from a list of feature names.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{locations}/listFeatures</description></item><item><term>Operation Id</term><description>Features_SubscriptionGet</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.SubscriptionGetFeature(System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locations" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locations" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
