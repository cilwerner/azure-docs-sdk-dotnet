<Type Name="MockablePurviewSubscriptionResource" FullName="Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockablePurviewSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePurviewSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePurviewSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePurviewSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePurviewSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPurviewAccountNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt; CheckPurviewAccountNameAvailability (Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt; CheckPurviewAccountNameAvailability(class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailability(Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPurviewAccountNameAvailability (content As PurviewAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PurviewAccountNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckPurviewAccountNameAvailability : Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&#xA;override this.CheckPurviewAccountNameAvailability : Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;" Usage="mockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if account name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPurviewAccountNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt; CheckPurviewAccountNameAvailabilityAsync (Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt; CheckPurviewAccountNameAvailabilityAsync(class Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailabilityAsync(Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPurviewAccountNameAvailabilityAsync (content As PurviewAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PurviewAccountNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckPurviewAccountNameAvailabilityAsync : Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt;&#xA;override this.CheckPurviewAccountNameAvailabilityAsync : Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt;" Usage="mockablePurviewSubscriptionResource.CheckPurviewAccountNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if account name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccounts (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccounts(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetPurviewAccounts(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPurviewAccounts (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PurviewAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPurviewAccounts : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;&#xA;override this.GetPurviewAccounts : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;" Usage="mockablePurviewSubscriptionResource.GetPurviewAccounts (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The skip token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List accounts in Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/accounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccountsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Purview.PurviewAccountResource&gt; GetPurviewAccountsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetPurviewAccountsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPurviewAccountsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PurviewAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPurviewAccountsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;&#xA;override this.GetPurviewAccountsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;" Usage="mockablePurviewSubscriptionResource.GetPurviewAccountsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.PurviewAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The skip token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List accounts in Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/accounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Purview.PurviewAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsages (Azure.Core.AzureLocation location, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsages(valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (location As AzureLocation, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PurviewUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;&#xA;override this.GetUsages : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;" Usage="mockablePurviewSubscriptionResource.GetUsages (location, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="filter" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="location"> The region. </param>
        <param name="filter"> The filter, currently unused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage quota configuration
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Purview.Models.PurviewUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsagesAsync (Azure.Core.AzureLocation location, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Purview.Models.PurviewUsage&gt; GetUsagesAsync(valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.GetUsagesAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (location As AzureLocation, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PurviewUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;&#xA;override this.GetUsagesAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;" Usage="mockablePurviewSubscriptionResource.GetUsagesAsync (location, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Purview.Models.PurviewUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="filter" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="location"> The region. </param>
        <param name="filter"> The filter, currently unused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage quota configuration
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Purview.Models.PurviewUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionGetFeature">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt; SubscriptionGetFeature (string locations, Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt; SubscriptionGetFeature(string locations, class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.SubscriptionGetFeature(System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubscriptionGetFeature (locations As String, content As PurviewBatchFeatureContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PurviewBatchFeatureStatus)" />
      <MemberSignature Language="F#" Value="abstract member SubscriptionGetFeature : string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&#xA;override this.SubscriptionGetFeature : string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;" Usage="mockablePurviewSubscriptionResource.SubscriptionGetFeature (locations, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locations" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="locations"> Location of feature. </param>
        <param name="content"> Request body with feature names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details from a list of feature names.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{locations}/listFeatures</description></item><item><term>Operation Id</term><description>Features_SubscriptionGet</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locations" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locations" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionGetFeatureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt; SubscriptionGetFeatureAsync (string locations, Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt; SubscriptionGetFeatureAsync(string locations, class Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewSubscriptionResource.SubscriptionGetFeatureAsync(System.String,Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubscriptionGetFeatureAsync (locations As String, content As PurviewBatchFeatureContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PurviewBatchFeatureStatus))" />
      <MemberSignature Language="F#" Value="abstract member SubscriptionGetFeatureAsync : string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt;&#xA;override this.SubscriptionGetFeatureAsync : string * Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt;" Usage="mockablePurviewSubscriptionResource.SubscriptionGetFeatureAsync (locations, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.PurviewBatchFeatureStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locations" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Purview.Models.PurviewBatchFeatureContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="locations"> Location of feature. </param>
        <param name="content"> Request body with feature names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details from a list of feature names.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Purview/locations/{locations}/listFeatures</description></item><item><term>Operation Id</term><description>Features_SubscriptionGet</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locations" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locations" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
