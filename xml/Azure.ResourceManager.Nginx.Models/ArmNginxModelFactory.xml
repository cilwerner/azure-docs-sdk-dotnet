<Type Name="ArmNginxModelFactory" FullName="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmNginxModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmNginxModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmNginxModelFactory" />
  <TypeSignature Language="F#" Value="type ArmNginxModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NginxCertificateData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.NginxCertificateData NginxCertificateData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Nginx.Models.NginxCertificateProperties properties = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.NginxCertificateData NginxCertificateData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Nginx.Models.NginxCertificateProperties properties, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxCertificateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Nginx.Models.NginxCertificateProperties,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxCertificateData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As NginxCertificateProperties = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As NginxCertificateData" />
      <MemberSignature Language="F#" Value="static member NginxCertificateData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Nginx.Models.NginxCertificateProperties * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.Nginx.NginxCertificateData" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxCertificateData (id, name, resourceType, systemData, properties, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.NginxCertificateData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Nginx.Models.NginxCertificateProperties" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties" />
        <param name="location" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.NginxCertificateData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.NginxCertificateData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NginxCertificateProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.Models.NginxCertificateProperties NginxCertificateProperties (Azure.ResourceManager.Nginx.Models.NginxProvisioningState? provisioningState = default, string keyVirtualPath = default, string certificateVirtualPath = default, string keyVaultSecretId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.Models.NginxCertificateProperties NginxCertificateProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; provisioningState, string keyVirtualPath, string certificateVirtualPath, string keyVaultSecretId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxCertificateProperties(System.Nullable{Azure.ResourceManager.Nginx.Models.NginxProvisioningState},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxCertificateProperties (Optional provisioningState As Nullable(Of NginxProvisioningState) = Nothing, Optional keyVirtualPath As String = Nothing, Optional certificateVirtualPath As String = Nothing, Optional keyVaultSecretId As String = Nothing) As NginxCertificateProperties" />
      <MemberSignature Language="F#" Value="static member NginxCertificateProperties : Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; * string * string * string -&gt; Azure.ResourceManager.Nginx.Models.NginxCertificateProperties" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxCertificateProperties (provisioningState, keyVirtualPath, certificateVirtualPath, keyVaultSecretId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.Models.NginxCertificateProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt;" />
        <Parameter Name="keyVirtualPath" Type="System.String" />
        <Parameter Name="certificateVirtualPath" Type="System.String" />
        <Parameter Name="keyVaultSecretId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provisioningState" />
        <param name="keyVirtualPath" />
        <param name="certificateVirtualPath" />
        <param name="keyVaultSecretId" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.Models.NginxCertificateProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.Models.NginxCertificateProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NginxConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.NginxConfigurationData NginxConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties properties = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.NginxConfigurationData NginxConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties properties, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As NginxConfigurationProperties = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As NginxConfigurationData" />
      <MemberSignature Language="F#" Value="static member NginxConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.Nginx.NginxConfigurationData" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxConfigurationData (id, name, resourceType, systemData, properties, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.NginxConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties" />
        <param name="location" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.NginxConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.NginxConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NginxConfigurationProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties NginxConfigurationProperties (Azure.ResourceManager.Nginx.Models.NginxProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; files = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; protectedFiles = default, Azure.ResourceManager.Nginx.Models.NginxConfigurationPackage package = default, string rootFile = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties NginxConfigurationProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; files, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; protectedFiles, class Azure.ResourceManager.Nginx.Models.NginxConfigurationPackage package, string rootFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxConfigurationProperties(System.Nullable{Azure.ResourceManager.Nginx.Models.NginxProvisioningState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Nginx.Models.NginxConfigurationFile},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Nginx.Models.NginxConfigurationFile},Azure.ResourceManager.Nginx.Models.NginxConfigurationPackage,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxConfigurationProperties (Optional provisioningState As Nullable(Of NginxProvisioningState) = Nothing, Optional files As IEnumerable(Of NginxConfigurationFile) = Nothing, Optional protectedFiles As IEnumerable(Of NginxConfigurationFile) = Nothing, Optional package As NginxConfigurationPackage = Nothing, Optional rootFile As String = Nothing) As NginxConfigurationProperties" />
      <MemberSignature Language="F#" Value="static member NginxConfigurationProperties : Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; * seq&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; * seq&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt; * Azure.ResourceManager.Nginx.Models.NginxConfigurationPackage * string -&gt; Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxConfigurationProperties (provisioningState, files, protectedFiles, package, rootFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt;" />
        <Parameter Name="files" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt;" />
        <Parameter Name="protectedFiles" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Nginx.Models.NginxConfigurationFile&gt;" />
        <Parameter Name="package" Type="Azure.ResourceManager.Nginx.Models.NginxConfigurationPackage" />
        <Parameter Name="rootFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provisioningState" />
        <param name="files" />
        <param name="protectedFiles" />
        <param name="package" />
        <param name="rootFile" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.Models.NginxConfigurationProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NginxDeploymentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.NginxDeploymentData NginxDeploymentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties properties = default, string skuName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.NginxDeploymentData NginxDeploymentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties properties, string skuName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxDeploymentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxDeploymentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional properties As NginxDeploymentProperties = Nothing, Optional skuName As String = Nothing) As NginxDeploymentData" />
      <MemberSignature Language="F#" Value="static member NginxDeploymentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties * string -&gt; Azure.ResourceManager.Nginx.NginxDeploymentData" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxDeploymentData (id, name, resourceType, systemData, tags, location, identity, properties, skuName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.NginxDeploymentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties" />
        <Parameter Name="skuName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Gets or sets the identity. </param>
        <param name="properties" />
        <param name="skuName" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.NginxDeploymentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.NginxDeploymentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NginxDeploymentProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties NginxDeploymentProperties (Azure.ResourceManager.Nginx.Models.NginxProvisioningState? provisioningState = default, string nginxVersion = default, string managedResourceGroup = default, Azure.ResourceManager.Nginx.Models.NginxNetworkProfile networkProfile = default, string ipAddress = default, bool? enableDiagnosticsSupport = default, Azure.ResourceManager.Nginx.Models.NginxStorageAccount loggingStorageAccount = default, int? scalingCapacity = default, string userPreferredEmail = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties NginxDeploymentProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; provisioningState, string nginxVersion, string managedResourceGroup, class Azure.ResourceManager.Nginx.Models.NginxNetworkProfile networkProfile, string ipAddress, valuetype System.Nullable`1&lt;bool&gt; enableDiagnosticsSupport, class Azure.ResourceManager.Nginx.Models.NginxStorageAccount loggingStorageAccount, valuetype System.Nullable`1&lt;int32&gt; scalingCapacity, string userPreferredEmail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxDeploymentProperties(System.Nullable{Azure.ResourceManager.Nginx.Models.NginxProvisioningState},System.String,System.String,Azure.ResourceManager.Nginx.Models.NginxNetworkProfile,System.String,System.Nullable{System.Boolean},Azure.ResourceManager.Nginx.Models.NginxStorageAccount,System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NginxDeploymentProperties (Optional provisioningState As Nullable(Of NginxProvisioningState) = Nothing, Optional nginxVersion As String = Nothing, Optional managedResourceGroup As String = Nothing, Optional networkProfile As NginxNetworkProfile = Nothing, Optional ipAddress As String = Nothing, Optional enableDiagnosticsSupport As Nullable(Of Boolean) = Nothing, Optional loggingStorageAccount As NginxStorageAccount = Nothing, Optional scalingCapacity As Nullable(Of Integer) = Nothing, Optional userPreferredEmail As String = Nothing) As NginxDeploymentProperties" />
      <MemberSignature Language="F#" Value="static member NginxDeploymentProperties : Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt; * string * string * Azure.ResourceManager.Nginx.Models.NginxNetworkProfile * string * Nullable&lt;bool&gt; * Azure.ResourceManager.Nginx.Models.NginxStorageAccount * Nullable&lt;int&gt; * string -&gt; Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties" Usage="Azure.ResourceManager.Nginx.Models.ArmNginxModelFactory.NginxDeploymentProperties (provisioningState, nginxVersion, managedResourceGroup, networkProfile, ipAddress, enableDiagnosticsSupport, loggingStorageAccount, scalingCapacity, userPreferredEmail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Nginx</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Nginx.Models.NginxProvisioningState&gt;" />
        <Parameter Name="nginxVersion" Type="System.String" />
        <Parameter Name="managedResourceGroup" Type="System.String" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.Nginx.Models.NginxNetworkProfile" />
        <Parameter Name="ipAddress" Type="System.String" />
        <Parameter Name="enableDiagnosticsSupport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="loggingStorageAccount" Type="Azure.ResourceManager.Nginx.Models.NginxStorageAccount" />
        <Parameter Name="scalingCapacity" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userPreferredEmail" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provisioningState" />
        <param name="nginxVersion" />
        <param name="managedResourceGroup"> The managed resource group to deploy VNet injection related network resources. </param>
        <param name="networkProfile" />
        <param name="ipAddress"> The IP address of the deployment. </param>
        <param name="enableDiagnosticsSupport" />
        <param name="loggingStorageAccount" />
        <param name="scalingCapacity" />
        <param name="userPreferredEmail" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Nginx.Models.NginxDeploymentProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
