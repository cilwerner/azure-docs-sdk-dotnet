<Type Name="AudioTranscriptionOptions" FullName="Azure.AI.OpenAI.AudioTranscriptionOptions">
  <TypeSignature Language="C#" Value="public class AudioTranscriptionOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioTranscriptionOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.AudioTranscriptionOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.AudioTranscriptionOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.AudioTranscriptionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AudioTranscriptionOptions&#xA;Implements IJsonModel(Of AudioTranscriptionOptions), IPersistableModel(Of AudioTranscriptionOptions)" />
  <TypeSignature Language="F#" Value="type AudioTranscriptionOptions = class&#xA;    interface IJsonModel&lt;AudioTranscriptionOptions&gt;&#xA;    interface IPersistableModel&lt;AudioTranscriptionOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The configuration information for an audio transcription request. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTranscriptionOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.AudioTranscriptionOptions" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTranscriptionOptions (string deploymentName, BinaryData audioData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string deploymentName, class System.BinaryData audioData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.#ctor(System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentName As String, audioData As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.AudioTranscriptionOptions : string * BinaryData -&gt; Azure.AI.OpenAI.AudioTranscriptionOptions" Usage="new Azure.AI.OpenAI.AudioTranscriptionOptions (deploymentName, audioData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="audioData" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The deployment name to use for audio transcription. </param>
        <param name="audioData">
            The audio data to transcribe.This must be the binary content of a file in one of the supported media formats:
            flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, webm.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.AudioTranscriptionOptions" />. </summary>
        <remarks>
            By default, audio data will be provided as if it were from an audio file named "file.wav". For other audio
            formats, set an appropriate filename via the <see cref="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Filename" /> property such that the format can be
            inferred. For example, setting <see cref="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Filename" /> to "foo.mp3" for an MP3 stream will ensure that the
            audio data is handled as MP3 input.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> or <paramref name="audioData" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AudioData">
      <MemberSignature Language="C#" Value="public BinaryData AudioData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData AudioData" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.AudioData" />
      <MemberSignature Language="VB.NET" Value="Public Property AudioData As BinaryData" />
      <MemberSignature Language="F#" Value="member this.AudioData : BinaryData with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.AudioData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The audio data to transcribe. This must be the binary content of a file in one of the supported media formats:
            flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, webm.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])" />.
            The byte[] will be serialized to a Base64 encoded string.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term><description>Creates a payload of "AQID".</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeploymentName">
      <MemberSignature Language="C#" Value="public string DeploymentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeploymentName" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.DeploymentName" />
      <MemberSignature Language="VB.NET" Value="Public Property DeploymentName As String" />
      <MemberSignature Language="F#" Value="member this.DeploymentName : string with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.DeploymentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The deployment name to use for audio transcription.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            When making a request against Azure OpenAI, this should be the customizable name of the "model deployment"
            (example: my-gpt4-deployment) and not the name of the model itself (example: gpt-4).
            </para>
          <para>
            When using non-Azure OpenAI, this corresponds to "model" in the request options and should use the
            appropriate name of the model (example: gpt-4).
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filename">
      <MemberSignature Language="C#" Value="public string Filename { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filename" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Filename" />
      <MemberSignature Language="VB.NET" Value="Public Property Filename As String" />
      <MemberSignature Language="F#" Value="member this.Filename : string with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.Filename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The optional filename or descriptive identifier to associate with with the audio data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The primary spoken language of the audio data to be transcribed, supplied as a two-letter ISO-639-1 language code
            such as 'en' or 'fr'.
            Providing this known input language is optional but may improve the accuracy and/or latency of transcription.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public string Prompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Property Prompt As String" />
      <MemberSignature Language="F#" Value="member this.Prompt : string with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.Prompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional hint to guide the model's style or continue from a prior audio segment. The written language of the
            prompt should match the primary spoken language of the audio data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.AudioTranscriptionFormat? ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.AudioTranscriptionFormat&gt; ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As Nullable(Of AudioTranscriptionFormat)" />
      <MemberSignature Language="F#" Value="member this.ResponseFormat : Nullable&lt;Azure.AI.OpenAI.AudioTranscriptionFormat&gt; with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.OpenAI.AudioTranscriptionFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The requested format of the transcription response data, which will influence the content and detail of the result. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.AudioTranscriptionOptions IJsonModel&lt;AudioTranscriptionOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.AudioTranscriptionOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#AudioTranscriptionOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AudioTranscriptionOptions Implements IJsonModel(Of AudioTranscriptionOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.AudioTranscriptionOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.AudioTranscriptionOptions" Usage="audioTranscriptionOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.AudioTranscriptionOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AudioTranscriptionOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#AudioTranscriptionOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AudioTranscriptionOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="audioTranscriptionOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.AudioTranscriptionOptions IPersistableModel&lt;AudioTranscriptionOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.AudioTranscriptionOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#AudioTranscriptionOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AudioTranscriptionOptions Implements IPersistableModel(Of AudioTranscriptionOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.AudioTranscriptionOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.AudioTranscriptionOptions" Usage="audioTranscriptionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.AudioTranscriptionOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AudioTranscriptionOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#AudioTranscriptionOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AudioTranscriptionOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="audioTranscriptionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AudioTranscriptionOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.AudioTranscriptionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#AudioTranscriptionOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AudioTranscriptionOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="audioTranscriptionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.AudioTranscriptionOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Temperature">
      <MemberSignature Language="C#" Value="public float? Temperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Temperature" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.AudioTranscriptionOptions.Temperature" />
      <MemberSignature Language="VB.NET" Value="Public Property Temperature As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.Temperature : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.OpenAI.AudioTranscriptionOptions.Temperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The sampling temperature, between 0 and 1.
            Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
            If set to 0, the model will use log probability to automatically increase the temperature until certain thresholds are hit.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
